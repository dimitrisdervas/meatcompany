{
  "name": "co-parallel",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/visionmedia/co-parallel"
  },
  "description": "parallel execution with concurrency control",
  "keywords": [
    "co",
    "generators",
    "parallel",
    "concurrent"
  ],
  "dependencies": {
    "co-thread": "0.0.1"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "co": "~3.0.2",
    "co-request": "~0.1.1"
  },
  "license": "MIT",
  "readme": "\n# co-parallel\n\n  Parallel execution with concurrency support that maintains result ordering.\n\n## Installation\n\n```\n$ npm install co-parallel\n```\n\n## Example\n\n```js\nvar parallel = require('co-parallel');\nvar request = require('co-request');\nvar co = require('co');\n\nvar urls = [\n  'http://google.com',\n  'http://yahoo.com',\n  'http://ign.com',\n  'http://cloudup.com',\n  'http://myspace.com',\n  'http://facebook.com',\n  'http://segment.io'\n];\n\nfunction *status(url) {\n  console.log('GET %s', url);\n  return (yield request(url)).statusCode;\n}\n\nco(function *(){\n  var reqs = urls.map(status);\n  var res = yield parallel(reqs, 2);\n  console.log(res);\n})();\n```\n\n## API\n\n### parallel(thunks, [concurrency])\n\n  Execute `thunks` in parallel, with the given\n  `concurrency` defaulting to 5.\n\n# License\n\n  MIT",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/co-parallel/issues"
  },
  "homepage": "https://github.com/visionmedia/co-parallel",
  "_id": "co-parallel@1.0.0",
  "_from": "co-parallel@~1.0.0"
}
